[comment encoding = UTF-8 /]
[**
 * The documentation of the module generate.
 */]
[module main('platform:/resource/org.rosi.crom.metamodel/')]
[import org::rosi::crom::framework::generator::main::templates::dtGen/]
[import org::rosi::crom::framework::generator::main::templates::util/]
[import org::rosi::crom::framework::generator::main::templates::ntGen/]
[import org::rosi::crom::framework::generator::main::templates::ctGen/]
[import org::rosi::crom::framework::generator::main::templates::factoryGen/]
[import org::rosi::crom::framework::generator::main::templates::packageGen/]
[import org::rosi::crom::framework::generator::main::templates::testGen/]
[import org::rosi::crom::framework::generator::main::templates::enumGen/]


[**
 * The documentation of the template main.
 * @param aModel
 */]
[template public generateCROM(aModel : Model)]
[comment @main/]
[comment]
[for (dt : DataType | aModel.elements)]
[dtGen(dt)/]
[/for]
[for (ct : CompartmentType | aModel.elements)]
[ctGen(ct,aModel)/]
[/for]
[for (nt : NaturalType | aModel.elements)]
[ntGen(nt,aModel)/]
[/for]

[factoryGen(aModel)/]
[testGen()/]
[enumGen()/]
[/comment]


[for (aModelElement : ModelElement | aModel.elements)]
[if(aModelElement.oclIsKindOf(DataType))]
[dtGen(aModelElement.oclAsType(DataType))/]
[elseif(aModelElement.oclIsKindOf(CompartmentType))]
[ctGen(aModelElement.oclAsType(CompartmentType),aModel)/]
[elseif(aModelElement.oclIsKindOf(NaturalType))]
[ntGen(aModelElement.oclAsType(NaturalType),aModel)/]
[/if]
[/for]
[factoryGen(aModel)/]
[enumGen()/]
[comment][testGen()/][/comment]



[comment][for (rt : RigidType | aModel.elements)]
[if(rt.oclIsKindOf(CompartmentType))]
[let roles : Bag(AbstractRole) = getRoleTypeByNameOfCompartmentType(rt.oclAsType(CompartmentType),getAllFulfillment(aModel.relations))]
[if(not roles->isEmpty())]
[rolePlayedCtGen(rt.oclAsType(CompartmentType), aModel.relations)/]
[else]
[ctGen(rt.oclAsType(CompartmentType), aModel.relations)/]
[/if]
[/let]
[elseif(rt.oclIsKindOf(NaturalType))]
[ntGen(rt.oclAsType(NaturalType), aModel)/]
[elseif(rt.oclIsKindOf(DataType))]
[dtGen(rt.oclAsType(DataType))/]
[else]
[/if]
[/for]
[/comment]
[/template]















