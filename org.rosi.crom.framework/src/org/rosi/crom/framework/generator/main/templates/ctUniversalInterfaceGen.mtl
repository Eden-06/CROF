[comment encoding = UTF-8 /]
[**
 * The documentation of the module generateCompartmentType.
 */]
[module ctUniversalInterfaceGen('platform:/resource/org.rosi.crom.metamodel/')]
[import org::rosi::crom::framework::generator::main::templates::util/]
[import org::rosi::crom::framework::generator::main::templates::rtInterfaceGen/]
[import org::rosi::crom::framework::generator::main::templates::relationshipInterfaceGen/]

[**
 * The documentation of the template generateCompartmentType.
 * @param aDataType
 */]

[template public ctInterfaceUniversalGen(aCompartmentType : CompartmentType, aModel : Model)]
[attributeMethodForInterface(aCompartmentType.attributes)/]
[operationForInterface(aCompartmentType.operations)/]
[rtInterfaceGen(aCompartmentType, aModel.relations)/]
[relationshipInterfaceGen(aCompartmentType)/]
[bindFunktionGenForInterface(aCompartmentType, aModel)/]
[/template]
[template private bindFunktionGenForInterface(aCompartmentType : CompartmentType, aModel : Model)]
[comment][for(p:Part | aCompartmentType.parts)]
[if(p.role.oclIsKindOf(RoleType))]
[bindFunktionGenByRoleTypeForInterface(p.role.oclAsType(RoleType),relations)/]
[else]
[bindFunktionGenByRoleGroupForInterface(p.role.oclAsType(RoleGroup),relations)/]
[/if]
[/for]
[/comment]
[comment]bind and unbind features[/comment]
[for(aAbstractRole : AbstractRole | aCompartmentType.parts.role)]
[if(aAbstractRole.oclIsKindOf(RoleType))]
[for(t : Type | getPlayers(aAbstractRole.oclAsType(RoleType), aModel.relations))]
[if(t.oclIsKindOf(NaturalType))]
[ntbindFunktionInterfaceGen(t.oclAsType(NaturalType),aAbstractRole.oclAsType(RoleType))/]
[ntUnbindFunktionInterfaceGen(t.oclAsType(NaturalType),aAbstractRole.oclAsType(RoleType))/]
[else]
[ctbindFunktionInterfaceGen(t.oclAsType(CompartmentType),aAbstractRole.oclAsType(RoleType))/]
[ctUnbindFunktionInterfaceGen(t.oclAsType(CompartmentType),aAbstractRole.oclAsType(RoleType))/]
[/if]
[/for]
[elseif(aAbstractRole.oclIsKindOf(RoleGroup))]
[let roleTypes:Set(RoleType)=getAllRoleTypes(aAbstractRole.oclAsType(RoleGroup))]
[for(aRoleType:RoleType|roleTypes)]
[for(aType:Type|getPlayers(aRoleType,aModel.relations))]
[if(aType.oclIsKindOf(NaturalType))]
[ntbindFunktionInterfaceGen(aType.oclAsType(NaturalType),aRoleType)/]
[ntUnbindFunktionInterfaceGen(aType.oclAsType(NaturalType),aRoleType)/]
[elseif(aType.oclIsKindOf(CompartmentType))]
[ctbindFunktionInterfaceGen(aType.oclAsType(CompartmentType),aRoleType)/]
[ctUnbindFunktionInterfaceGen(aType.oclAsType(CompartmentType),aRoleType)/]
[else]
something wrong in ctInterfaceUniversalGen.mtl line 45.
[/if]
[/for]
[/for]
[/let]
[else]
something wrong in ctInterfaceUniversalGen.mtl line 31.
[/if]
[/for]

[comment]getRole features[/comment]
[for(aNamedElement:NamedElement|aModel.elements)]
[if(aNamedElement.oclIsKindOf(NaturalType))]
[let aNaturalTypePlayer:NaturalType=aNamedElement.oclAsType(NaturalType)]
[let roleTypes:Set(RoleType)=getRoleTypeByPlayerInCompartmentType(getRoles(aNaturalTypePlayer, getAllFulfillments(aModel.relations)),getAllRoleTypes(aCompartmentType))]
[if(roleTypes<>Set{})]
[if((roleTypes->size())=1)]
[let aRoleType : RoleType = roleTypes->asOrderedSet()->first()]
[ntgetRoleByNaturalTypeInterfaceGen(aNaturalTypePlayer,aRoleType)/]
[/let]
[else]
[ntgetRolesByNaturalTypeInterfaceGen(aNaturalTypePlayer)/]
[/if]
[/if]
[/let]
[/let]
[elseif(aNamedElement.oclIsKindOf(CompartmentType))]
[let aCompartmentTypePlayer:CompartmentType=aNamedElement.oclAsType(CompartmentType)]
[if(isCompartmentTypePlayedRole(aCompartmentTypePlayer,aModel.relations))]
[let roleTypes:Set(RoleType)=getRoleTypeByPlayerInCompartmentType(getRoles(aCompartmentTypePlayer, getAllFulfillments(aModel.relations)), getAllRoleTypes(aCompartmentType))]
[if(roleTypes<>Set{})]
[if((roleTypes->size())=1)]
[let aRoleType : RoleType = roleTypes->asOrderedSet()->first()]
[ntgetRoleByCompartmentTypeInterfaceGen(aCompartmentTypePlayer,aRoleType)/]
[/let]
[else]
[ntgetRolesByCompartmentTypeInterfaceGen(aCompartmentTypePlayer)/]
[/if]
[/if]
[/let]
[/if]
[/let]
[elseif(aNamedElement.oclIsKindOf(DataType))]
[else]
something wrong in ctUniversalImplGen.mtl line 64.
[/if]
[/for]
[/template]

[comment][template private bindFunktionGenByRoleGroupForInterface(rg : RoleGroup,relations:Set(Relation))]
[let nts : Bag(NaturalType) = getNaturalTypeByNameOfRoleGroup(rg,getAllFulfillment(relations))]
[if(not nts->isEmpty())]
[for(nt:NaturalType | nts)]
[for(rt:RoleType|rg.elements)]
[bindFunktionGenForInterface(rt,nt)/]
[/for]
[/for]
[/if]
[/let]





[/template]

[template private bindFunktionGenByRoleTypeForInterface(rt : RoleType,relations:Set(Relation))]
[let nts : Bag(NaturalType) = getNaturalTypeByNameOfRoleType(rt,getAllFulfillment(relations))]
[if(not nts->isEmpty())]
[for(nt:NaturalType | nts)]
[bindFunktionGenForInterface(rt,nt)/]
[/for]
[/if]
[/let]
[/template][/comment]

[template private ctbindFunktionInterfaceGen(aCompartmentType:CompartmentType,rt : RoleType)]
[rt.name/] bind[rt.name.toUpperFirst()/]([aCompartmentType.name.toUpperFirst()/] [aCompartmentType.name.toLowerFirst()/]);
[/template]
[template private ntbindFunktionInterfaceGen(nt:NaturalType,rt : RoleType)]
[rt.name/] bind[rt.name.toUpperFirst()/]([nt.name.toUpperFirst()/] [nt.name.toLowerFirst()/]);
[/template]
[template private ctUnbindFunktionInterfaceGen(aCompartmentType:CompartmentType,rt : RoleType)]
boolean unbind[rt.name.toUpperFirst()/]([aCompartmentType.name.toUpperFirst()/] [aCompartmentType.name.toLowerFirst()/]);
[/template]
[template private ntUnbindFunktionInterfaceGen(nt:NaturalType,rt : RoleType)]
boolean unbind[rt.name.toUpperFirst()/]([nt.name.toUpperFirst()/] [nt.name.toLowerFirst()/]);
[/template]
[template private ntgetRolesByNaturalTypeInterfaceGen(nt:NaturalType)]
List<Object> getRole([nt.name.toUpperFirst()/] [nt.name.toLowerFirst()/]);
[/template]
[template private ntgetRoleByNaturalTypeInterfaceGen(nt:NaturalType,rt:RoleType)]
[rt.name.toUpperFirst()/] getRole([nt.name.toUpperFirst()/] [nt.name.toLowerFirst()/]);
[/template]
[template private ntgetRolesByCompartmentTypeInterfaceGen(aCompartmentType : CompartmentType)]
List<Object> getRole([aCompartmentType.name.toUpperFirst()/] [aCompartmentType.name.toLowerFirst()/]);
[/template]
[template private ntgetRoleByCompartmentTypeInterfaceGen(aCompartmentType : CompartmentType,rt:RoleType)]
[rt.name.toUpperFirst()/] getRole([aCompartmentType.name.toUpperFirst()/] [aCompartmentType.name.toLowerFirst()/]);
[/template]