[comment encoding = UTF-8 /]
[**
 * The documentation of the module generate.
 */]
[module main('platform:/resource/org.rosi.crom.metamodel/')]
[import org::rosi::crom::framework::generator::templates::main::generalQueries/]
[import org::rosi::crom::framework::generator::templates::main::mainDataTypeGen/]
[import org::rosi::crom::framework::generator::templates::main::mainNaturalTypeGen/]
[import org::rosi::crom::framework::generator::templates::main::mainCompartmentTypeGen/]
[import org::rosi::crom::framework::generator::templates::main::mainFactoryGen/]
[import org::rosi::crom::framework::generator::templates::main::packageGen/]
[import org::rosi::crom::framework::generator::templates::main::testGen/]
[import org::rosi::crom::framework::generator::templates::main::mainEnumGen/]
[import org::rosi::crom::framework::generator::templates::main::mainModelGen/]
[import org::rosi::crom::framework::generator::templates::main::crofModelGen/]
[import org::rosi::crom::framework::generator::templates::main::serializerGen/]
[import org::rosi::crom::framework::generator::templates::main::deserializerGen/]
[import org::rosi::crom::framework::generator::templates::main::queryTest/]

[**
 * The documentation of the template main.
 * @param aModel
 */]
[template public generateCROM(aModel : Model)]
[comment @main/]
[for (aModelElement : ModelElement | aModel.elements)]
[if(aModelElement.oclIsKindOf(DataType))]
[mainDataTypeGen(aModelElement.oclAsType(DataType),aModel)/]
[elseif(aModelElement.oclIsKindOf(CompartmentType))]
[mainCompartmentTypeGen(aModelElement.oclAsType(CompartmentType),aModel)/]
[elseif(aModelElement.oclIsKindOf(NaturalType))]
[mainNaturalTypeGen(aModelElement.oclAsType(NaturalType),aModel)/]
[/if]
[/for]
[serializerGen()/]
[deserializerGen()/]

[crofModelGen()/]
[mainFactoryGen()/]
[mainEnumGen()/]
[mainModelGen()/]
[testGen()/]
[comment][queryTest()/][/comment]
[/template]






