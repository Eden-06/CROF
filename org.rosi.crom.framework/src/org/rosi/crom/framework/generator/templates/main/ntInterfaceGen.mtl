[comment encoding = UTF-8 /]
[**
 * The documentation of the module generateNaturalType.
 */]
[module ntInterfaceGen('platform:/resource/org.rosi.crom.metamodel/')]
[import org::rosi::crom::framework::generator::templates::main::util/]

[**
 * The documentation of the template generateNaturalType.
 * @param aNaturalType
 */]
[template public ntInterfaceGen(aNaturalType : NaturalType,aModel : Model)]

[file (getFolderPath() +'/'+ aNaturalType.name.toUpperFirst()+'.java', false, 'UTF-8')]
package [getPackagePath()/];



public interface [aNaturalType.name.toUpperFirst()/]{
	[attributeMethodForInterface(aNaturalType.attributes)/]
	[operationForInterface(aNaturalType.operations)/]
	[playerFunctionGen(aNaturalType,aModel)/]
}
[/file]
[/template]

[template private playerFunctionGen(aNaturalType : NaturalType,aModel : Model)]
boolean isSame([aNaturalType.name.toUpperFirst()/] [aNaturalType.name.toLowerFirst()/]);
[let roleTypes:Set(RoleType)=getRoles(aNaturalType,getAllFulfillments(aModel.relations))]
[for(aRoleType:RoleType|roleTypes)]
boolean is[aRoleType.name.toUpperFirst()/]([getOwner(aRoleType).name.toUpperFirst()/] [getOwner(aRoleType).name.toLowerFirst()/]);
[getOwner(aRoleType).name.toUpperFirst()/].[aRoleType.name.toUpperFirst()/] get[aRoleType.name.toUpperFirst()/]([getOwner(aRoleType).name.toUpperFirst()/] [getOwner(aRoleType).name.toLowerFirst()/]);
[/for]
[/let]
[/template]
