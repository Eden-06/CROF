[comment encoding = UTF-8 /]
[**
 * The documentation of the module generateCompartmentType.
 */]
[module ctPlayedRoleInterfaceGen('platform:/resource/org.rosi.crom.metamodel/')]
[import org::rosi::crom::framework::generator::templates::main::util/]
[import org::rosi::crom::framework::generator::templates::main::ctUniversalInterfaceGen/]

[**
 * The documentation of the template generateCompartmentType.
 * @param aDataType
 */]

[template public ctPlayedRoleInterfaceGen(aCompartmentType : CompartmentType, aModel : Model)]

[file (getFolderPath() +'/'+ aCompartmentType.name.toUpperFirst()+'.java', false, 'UTF-8')]
package [getPackagePath()/];

import java.util.List;

public interface [aCompartmentType.name/]{
	[ctInterfaceUniversalGen(aCompartmentType,aModel)/]
	[playerFunctionGen(aCompartmentType,aModel)/]
}
[/file]
[/template]

[template public playerFunctionGen(aCompartmentType : CompartmentType,aModel : Model)]
boolean isSame([aCompartmentType.name.toUpperFirst()/] [aCompartmentType.name.toLowerFirst()/]);
[let roleTypes:Set(RoleType)=getRoles(aCompartmentType,getAllFulfillments(aModel.relations))]
[for(aRoleType:RoleType|roleTypes)]
boolean is[aRoleType.name.toUpperFirst()/]([getOwner(aRoleType).name.toUpperFirst()/] [getOwner(aRoleType).name.toLowerFirst()/]);
[getOwner(aRoleType).name.toUpperFirst()/].[aRoleType.name.toUpperFirst()/] get[aRoleType.name.toUpperFirst()/]([getOwner(aRoleType).name.toUpperFirst()/] [getOwner(aRoleType).name.toLowerFirst()/]);
[/for]
[/let]
[/template]